# Generated by Django 4.2.1 on 2023-12-07 13:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcademicDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ects', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('student_number', models.CharField(max_length=100)),
                ('academic_degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.academicdegree')),
            ],
        ),
        migrations.CreateModel(
            name='AlumniUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', models.TextField(blank=True)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pictures')),
                ('social_id_1', models.CharField(blank=True, max_length=100)),
                ('social_id_2', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, upload_to='company_logos')),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('social_id_1', models.CharField(blank=True, max_length=100)),
                ('social_id_2', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ThesisDefense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('thesis_title', models.CharField(max_length=100)),
                ('grade', models.IntegerField(validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(10)])),
                ('abstract', models.TextField(blank=True)),
                ('mentor', models.CharField(max_length=100)),
                ('commission_member_1', models.CharField(max_length=100)),
                ('commission_member_2', models.CharField(max_length=100)),
                ('commission_member_3', models.CharField(max_length=100)),
                ('academic_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.academichistory')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyAdministratorUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('alumni_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.alumniuser')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='employees',
            field=models.ManyToManyField(through='main.EmploymentHistory', to='main.alumniuser'),
        ),
        migrations.AddField(
            model_name='academichistory',
            name='alumni_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.alumniuser'),
        ),
        migrations.AddField(
            model_name='academicdegree',
            name='students',
            field=models.ManyToManyField(through='main.AcademicHistory', to='main.alumniuser'),
        ),
    ]
